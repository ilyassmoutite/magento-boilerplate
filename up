#!/bin/bash

write_config_yaml() {
	# TODO: different scripts depending on template
	# TODO: composer.json templates (or no composer.json at all for "allinone")
	while true; do
		printf "\x1b[1mChoose a template:\x1b[0m\n"
		printf "\x1b[32m[1]\x1b[33m All-in-one\n"
		printf "\x1b[32m[2]\x1b[33m Composer+Modman\n"
		printf "\x1b[32m[3]\x1b[33m Composer+Modman+NginX\n"
		read -p "> " cmd
		case $cmd in
			[1]* )
				template="allinone"
				printf "\n\x1b[33mSpecify Magento root directory default: www)\x1b[32m\n"
				read -ep "> ./" src;
				if [ "$src" == "" ]; then
					src="www"
				fi
				printf "\x1b[0m";
				cp -r puphpet/templates/allinone/to-copy/* ./
				break;;
			[2]* )
			template="modman"
				src="src"
				cp -r puphpet/templates/modman/to-copy/* ./
				break;;
			[3]* )
			template="nginx"
				src="src"
				cp -r puphpet/templates/nginx/to-copy/* ./
				break;;
			* ) [ "$cmd" != "" ] && echo -e "\x1b[31mNot recognized template '$cmd'.\x1b[0m";;
		esac
	done
	src="./$src"
	echo $src > etc/src
	#escape for sed:
	src=$(sed -e 's/[\/&]/\\&/g' etc/src)
	up=$(echo $0 | sed -e 's/[\/&]/\\&/g')
	sed -e "s/{DOMAIN}/`cat etc/domain`/" -e "s/{IP}/$ip/" -e "s/{SOURCE_DIR}/$src/" puphpet/templates/$template/config.yaml > puphpet/config.yaml
	cat puphpet/templates/$template/README.NFO | sed -e "s/{UP}/$up/" -e "s/{SOURCE_DIR}/$src/"
}
start_rsync_auto() {
	printf "\x1b[34m\x1b[1mRsync shared folders...\x1b[0m\n"
	vagrant rsync-auto &
	printf "\x1b[34m\x1b[1mNow running rsync in the background (pid=\x1b[32m$!\x1b[34m).\x1b[0m\n"
}
kill_rsync_auto() {
    printf "\x1b[34m\x1b[1mKill rsync-auto process...\x1b[0m\n"
    kill -INT $!
}
ask_to_continue() {
	printf "\x1b[1mContinue? [y/n] \x1b[0m"
	while true; do
		read -e yn
		case $yn in
			[Yy]* ) break;;
			[Nn]* ) exit;;
		esac
	done;
}

if [ ! -f puphpet/config.yaml ]; then
	cat puphpet/shell/ascii-art/vagrant-logo.txt
	echo ""
	echo ""
	printf "\x1b[1mWelcome! This is the first start, please choose a domain and IP for your box:\x1b[0m\n"
	echo ""
	domain=#
	while [[ ! $domain =~ ^[a-z0-9.-]*$ ]]; do
		printf "\x1b[33mDomain (default: magento.local)\x1b[32m\n"
		read -ep ">" domain
	done
	if [ "$domain" == "" ]; then
		domain=magento.local
	fi
	while [[ ! $ip =~ ^[0-9]{1,3}$ ]] || [[ ! $ip -gt 1 ]]; do
		printf "\x1b[33mIP (set last parts > 1)\x1b[32m\n"
		read -ep "> 192.168.56." ip
	done
	ip="192.168.56.$ip"
	printf "\x1b[0;1mPlease review your configuration:\x1b[0m\n"
	echo ""
	printf "\tDomain: \x1b[32m$domain\x1b[0m\n"
	printf "\tIP: \x1b[32m$ip\x1b[0m\n"
	echo ""
	ask_to_continue;
	echo $domain > etc/domain
	write_config_yaml
	ask_to_continue;
fi

printf "\x1b[34m\x1b[1mStarting Vagrantbox...\x1b[0m\n"
vagrant up || exit
start_rsync_auto;

while true; do
	printf "\x1b[32m[L]\x1b[33m Login via SSH\n"
	printf "\x1b[32m[M]\x1b[33m Login to Magerun console\n"
	printf "\x1b[32m[H]\x1b[33m Halt\n"
	printf "\x1b[32m[S]\x1b[33m Suspend\n"
	printf "\x1b[32m[R]\x1b[33m Restart rsnyc-auto watcher\n"
	printf "\x1b[32m[P]\x1b[33m Provision\x1b[0m\n"
    read -p "> " cmd
    case $cmd in
        [Hh]* ) kill_rsync_auto; echo -e "\x1b[34m\x1b[1mHalt Vagrantbox...\x1b[0m"; vagrant halt; break;;
        [Ss]* ) kill_rsync_auto; echo -e "\x1b[34m\x1b[1mSuspend Vagrantbox...\x1b[0m"; vagrant suspend; break;;
        [Ll]* ) echo -e "\x1b[34m\x1b[1mConnecting to Vagrantbox...\x1b[0m"; vagrant ssh; continue;;
		[Mm]* ) echo -e "\x1b[34m\x1b[1mConnecting to Vagrantbox (Logout with Ctrl-D)...\x1b[0m"; vagrant ssh -c 'n98-magerun shell'; continue;;
		[Rr]* ) kill_rsync_auto; echo -e "\x1b[34m\x1b[1mRestart rsync-auto...\x1b[0m"; start_rsync_auto; continue;;
		[Pp]* ) echo -e "\x1b[34m\x1b[1mProvisioning...\x1b[0m"; vagrant provision; continue;;
        * ) [ "$cmd" != "" ] && echo -e "\x1b[31mNot recognized command '$cmd'.\x1b[0m";;
    esac
done

printf "\x1b[33mVagrantbox stopped.\x1b[0m\n"
